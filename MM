repeat wait() until game.Players.LocalPlayer.Character.HumanoidRootPart







_G.main = true

_G.memory = 1500



function main()

    function airwalk()

        local air = Instance.new("Part", workspace)

        air.Size = Vector3.new(7, 2, 3)

        air.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)

        air.Transparency = 1

        air.Anchored = true

        air.Name = "Airwalk"

        for i = 1, math.huge do

            air.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)

        wait()

        end

    end

    function split(inputstr, sep) sep=sep or '%s' local t={}  for field,s in string.gmatch(inputstr, "([^"..sep.."]*)("..sep.."?)") do table.insert(t,field)  if s=="" then return t end end end

    wait(10)

    loadstring(game:HttpGet("https://raw.githubusercontent.com/Muhammad6196/Project-WD/main/Mainstring.lua"))()



    if _G.isrejoin == true then

        spawn(function()

            wait(120)

            local ts = game:GetService("TeleportService")



            local p = game:GetService("Players").LocalPlayer



            ts:Teleport(game.PlaceId, p)

        end)

    end

    wait(15)

    local teleport_mid = {

        location = Vector3.new(9021.697265625, -10.281599998474121, 2505.49951171875)

    }



    local tweens = game:GetService('TweenService')



    local tween_info = TweenInfo.new(1, Enum.EasingStyle.Linear)



    local plr = game.Players.LocalPlayer



    function Bypass_tlp(p)



        if plr.Character and plr.Character:FindFirstChild('HumanoidRootPart') then



            local cf = CFrame.new(p)



            local cr = tweens:Create(plr.Character.HumanoidRootPart, tween_info,  {CFrame = cf})



            cr:play()



            cr.Completed:wait()



        end



    end



    _G.memory = _G.memory or 3000

    local CharParts = {}

    _G.NoClip = true

    game:GetService("RunService").Stepped:connect(function()

        if _G.NoClip then

            for i = 1, #CharParts do

                CharParts[i].CanCollide = false

            end

        end

    end)



    function SetupCharCollide(Char)

        CharParts = {}

        Char:WaitForChild("Head")

        for i, v in pairs(Char:GetChildren()) do

            if v:IsA("BasePart") then

                table.insert(CharParts, v)

            end

        end

    end



    if game.Players.LocalPlayer.Character then

        SetupCharCollide(game.Players.LocalPlayer.Character)

    end

    game.Players.LocalPlayer.CharacterAdded:connect(function(Ch)

    SetupCharCollide(Ch)

    end)

    spawn(function()

        count = 0

        while true do

            count = count + 1

            if count == 20 then

                break

            end

            --Bypass_tlp(teleport_mid.location)

            wait(1)

        end

    end)

    wait(2)

    spawn(function()

        while _G.main == true do



            local StatsService = game:GetService("Stats")



            local totalMemoryUsage = StatsService:GetTotalMemoryUsageMb()



            local MemoryUsage = tonumber(totalMemoryUsage)



            if MemoryUsage > _G.memory then



                local ts = game:GetService("TeleportService")



                local p = game:GetService("Players").LocalPlayer



                ts:Teleport(game.PlaceId, p)



            end



            wait()



        end



    end)

end



main()
